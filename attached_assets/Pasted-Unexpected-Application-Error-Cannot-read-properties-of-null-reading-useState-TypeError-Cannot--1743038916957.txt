Unexpected Application Error!
Cannot read properties of null (reading 'useState')
TypeError: Cannot read properties of null (reading 'useState')
    at useState (https://8901fbed-36ef-448c-8cb9-b6f518422d98-00-91z038a1jzl.spock.replit.dev/@fs/home/runner/workspace/node_modules/.vite/deps/chunk-ZMLY2J2T.js?v=f700dd94:1066:29)
    at SettingsPopup (https://8901fbed-36ef-448c-8cb9-b6f518422d98-00-91z038a1jzl.spock.replit.dev/src/components/ui/settings-popup.tsx:32:37)
    at renderWithHooks (https://8901fbed-36ef-448c-8cb9-b6f518422d98-00-91z038a1jzl.spock.replit.dev/@fs/home/runner/workspace/node_modules/.vite/deps/chunk-276SZO74.js?v=1faf511b:11548:26)
    at mountIndeterminateComponent (https://8901fbed-36ef-448c-8cb9-b6f518422d98-00-91z038a1jzl.spock.replit.dev/@fs/home/runner/workspace/node_modules/.vite/deps/chunk-276SZO74.js?v=1faf511b:14926:21)
    at beginWork (https://8901fbed-36ef-448c-8cb9-b6f518422d98-00-91z038a1jzl.spock.replit.dev/@fs/home/runner/workspace/node_modules/.vite/deps/chunk-276SZO74.js?v=1faf511b:15914:22)
    at beginWork$1 (https://8901fbed-36ef-448c-8cb9-b6f518422d98-00-91z038a1jzl.spock.replit.dev/@fs/home/runner/workspace/node_modules/.vite/deps/chunk-276SZO74.js?v=1faf511b:19753:22)
    at performUnitOfWork (https://8901fbed-36ef-448c-8cb9-b6f518422d98-00-91z038a1jzl.spock.replit.dev/@fs/home/runner/workspace/node_modules/.vite/deps/chunk-276SZO74.js?v=1faf511b:19198:20)
    at workLoopSync (https://8901fbed-36ef-448c-8cb9-b6f518422d98-00-91z038a1jzl.spock.replit.dev/@fs/home/runner/workspace/node_modules/.vite/deps/chunk-276SZO74.js?v=1faf511b:19137:13)
    at renderRootSync (https://8901fbed-36ef-448c-8cb9-b6f518422d98-00-91z038a1jzl.spock.replit.dev/@fs/home/runner/workspace/node_modules/.vite/deps/chunk-276SZO74.js?v=1faf511b:19116:15)
    at recoverFromConcurrentError (https://8901fbed-36ef-448c-8cb9-b6f518422d98-00-91z038a1jzl.spock.replit.dev/@fs/home/runner/workspace/node_modules/.vite/deps/chunk-276SZO74.js?v=1faf511b:18736:28)
ðŸ’¿ Hey developer ðŸ‘‹

You can provide a way better UX than this when your app throws errors by providing your own ErrorBoundary or errorElement prop on your route.