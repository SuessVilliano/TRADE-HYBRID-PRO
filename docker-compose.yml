version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tradehybrid-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-tradehybrid}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tradehybridpassword}
      POSTGRES_DB: ${POSTGRES_DB:-tradehybrid}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tradehybrid_network

  # Redis for caching and session storage
  redis:
    image: redis:alpine
    container_name: tradehybrid-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tradehybrid_network

  # Frontend Service (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tradehybrid-frontend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - webhooks
      - nexus
      - staking
    volumes:
      - ./frontend/nginx/ssl:/etc/nginx/ssl
    networks:
      - tradehybrid_network

  # Webhooks Service (Signal Receivers and WebSockets)
  webhooks:
    build:
      context: ./webhooks
      dockerfile: Dockerfile
    container_name: tradehybrid-webhooks
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=5000
      - DATABASE_URL=postgres://${POSTGRES_USER:-tradehybrid}:${POSTGRES_PASSWORD:-tradehybridpassword}@postgres:5432/${POSTGRES_DB:-tradehybrid}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - SOLANA_RPC_URL=${SOLANA_RPC_URL}
      - WHOP_API_KEY=${WHOP_API_KEY}
      - WHOP_APP_ID=${WHOP_APP_ID}
    networks:
      - tradehybrid_network

  # Nexus Service (Broker Aggregation)
  nexus:
    build:
      context: ./nexus
      dockerfile: Dockerfile
    container_name: tradehybrid-nexus
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=4000
      - DATABASE_URL=postgres://${POSTGRES_USER:-tradehybrid}:${POSTGRES_PASSWORD:-tradehybridpassword}@postgres:5432/${POSTGRES_DB:-tradehybrid}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - ALPACA_API_KEY=${ALPACA_API_KEY}
      - ALPACA_API_SECRET=${ALPACA_API_SECRET}
    networks:
      - tradehybrid_network

  # Staking Service (THC and SOL Staking)
  staking:
    build:
      context: ./staking
      dockerfile: Dockerfile
    container_name: tradehybrid-staking
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3500
      - DATABASE_URL=postgres://${POSTGRES_USER:-tradehybrid}:${POSTGRES_PASSWORD:-tradehybridpassword}@postgres:5432/${POSTGRES_DB:-tradehybrid}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - SOLANA_RPC_URL=${SOLANA_RPC_URL}
      - VALIDATOR_PUBLIC_KEY=5Mp3EF1donYwLxhe5hs6HoWpAucZGLZ76NKRNztkjEej
      - THC_TOKEN_ADDRESS=4kXPBvQthvpes9TC7h6tXsYxWPUbYWpocBMVUG3eBLy4
    networks:
      - tradehybrid_network

networks:
  tradehybrid_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: